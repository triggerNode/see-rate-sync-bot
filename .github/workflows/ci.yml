name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

env:
    VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
    VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
    SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

jobs:
    test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x, 20.x]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run linting
              run: npm run lint

            - name: Run type checking
              run: npx tsc --noEmit

            - name: Run tests
              run: npm test -- --coverage --watchAll=false

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage/lcov.info
                  flags: unittests
                  name: codecov-umbrella

    build:
        runs-on: ubuntu-latest
        needs: test

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Build application
              run: npm run build

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-files
                  path: build/
                  retention-days: 30

    deploy-staging:
        runs-on: ubuntu-latest
        needs: [test, build]
        if: github.ref == 'refs/heads/develop'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: build-files
                  path: build/

            - name: Deploy to staging
              run: echo "Deploy to staging environment"
              # Add your staging deployment commands here

    deploy-production:
        runs-on: ubuntu-latest
        needs: [test, build]
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: build-files
                  path: build/

            - name: Deploy to production
              run: echo "Deploy to production environment"
              # Add your production deployment commands here

    security-scan:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Run security audit
              run: npm audit --audit-level high

            - name: Run CodeQL Analysis
              uses: github/codeql-action/init@v3
              with:
                  languages: typescript, javascript

            - name: Autobuild
              uses: github/codeql-action/autobuild@v3

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v3
